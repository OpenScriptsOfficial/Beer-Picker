// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Spinner beerColor;

  @NonNull
  public final TextView brands;

  @NonNull
  public final Button findBeer;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Spinner beerColor,
      @NonNull TextView brands, @NonNull Button findBeer) {
    this.rootView = rootView;
    this.beerColor = beerColor;
    this.brands = brands;
    this.findBeer = findBeer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.beer_color;
      Spinner beerColor = ViewBindings.findChildViewById(rootView, id);
      if (beerColor == null) {
        break missingId;
      }

      id = R.id.brands;
      TextView brands = ViewBindings.findChildViewById(rootView, id);
      if (brands == null) {
        break missingId;
      }

      id = R.id.find_beer;
      Button findBeer = ViewBindings.findChildViewById(rootView, id);
      if (findBeer == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, beerColor, brands, findBeer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
